#include <iostream>
using namespace std;

//  1 + 6i
//  2 + 2i
//----------
//  3 + 8i

class Complex
{
    int a;
    int b;

public:
    void setNumber(int n1, int n2)
    {
        a = n1;
        b = n2;
    }

    //Below line means that sumComplex function can access the private members
    friend Complex sumComplex(Complex o1, Complex o2);

    void printNumber()
    {
        cout << "The Complex nmuber is : " << a << " + " << b << "i" << endl;
    }
};

Complex sumComplex(Complex o1, Complex o2)
{
    Complex o3;
    o3.setNumber((o1.a + o2.a), (o1.b + o2.b));
    return o3;
}

int main()
{
    Complex c1, c2, sum;
    c1.setNumber(1, 5);
    c1.printNumber();

    c2.setNumber(3, 4);
    c2.printNumber();

    sum = sumComplex(c1, c2);

    sum.printNumber();

    return 0;
}

/*  Properties of friend function

1. Not in the scope of class

2. Since it is not in scope of class so it cannot be called by the object of that class
    c1.sumComplex() ==> invalid

3. Can be invoked witohut the help of any object

4. Usually contains the objects as arguments

5. Can be declared inside public or private section of the class

6. It cannot access members directly by their name and need object_name.member_name to access any member

*/
