#include <iostream>
using namespace std;

// Multiple Inheritance Syntax
// class DerivedC : visibility-mode base1, visibility-mode base2
// {
//     Body of class DerivedC
// };

class Base1
{
protected:
    int base1int;

public:
    void set_base1int(int a)
    {
        base1int = a;
    }
};

class Base2
{
protected:
    int base2int;

public:
    void set_base2int(int a)
    {
        base2int = a;
    }
};

class Base3
{
protected:
    int base3int;

public:
    void set_base3int(int a)
    {
        base3int = a;
    }
};

class Derived : public Base1, public Base2, public Base3
{
public:
    void show()
    {
        cout << "The value of Base1 is " << base1int << endl;
        cout << "The value of Base2 is " << base2int << endl;
        cout << "The value of Base3 is " << base3int << endl;
        cout << "The sum of these values is " << base1int + base2int + base3int << endl;
    }
};

/*
The inherited Derived calss will look like this =>
Data Members : 
    base1int --> Protected
    base2int --> Protected

Member Functions :
    set_base1int --> Public 
    set_base2int --> Public
    show --> Public
*/

int main()
{
    Derived mrunank;
    mrunank.set_base1int(5);
    mrunank.set_base2int(10);
    mrunank.set_base3int(10);

    mrunank.show();
    return 0;
}
